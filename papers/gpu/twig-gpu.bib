@inproceedings{reppy06fig,
  author = {John Reppy and Chunyan Song},
  title = {Application-specific foreign-interface generation},
  booktitle = {Proceedings of the Fifth International Conference on
			Generative Programming and Component Engineering},
  pages = {49--58},
  year = 2006,
  month = oct
}

@inproceedings{kennedy00telescoping,
  author = {Ken Kennedy},
  title = {{Telescoping Languages: A Compiler Strategy for Implementation of High-Level Domain-Specific Programming Systems}},
  booktitle = {Proceedings of the 14th International Parallel and Distributed Processing Symposium},
  year = 2000,
  month = may
}

@article{baumgartner05synthesis,
  author = {Gerald Baumgartner and others},
  title = {{Synthesis of High-Performance Parallel Programs for a Class of Ab Initio Quantum Chemistry Models}},
  journal = {Proceedings of the IEEE},
  volume = 93,
  number = 2,
  year = 2005,
  month = feb,
  pages = {276--292}
}

@misc{notused,
 author= {Gerald Baumgartner and Alexander Auer and David E. Bernholdt and Alina Bibireata and Venkatesh Choppella and Daniel Cociorva and Xiaoyang Gao and Robert J. Harrison and So Hirata and Sriram Krishnamoorthy and Sandhya Krishnan and Chi-chung Lam and Qingda Lu and Marcel Nooijen and Russell M. Pitzer and J. Ramanujam and P. Sadayappan and Alexander Sibiryakov and D. E. Bernholdt and A. Bibireata and D. Cociorva and X. Gao and S. Krishnamoorthy and S. Krishnan}
}

@article{Hulette:2008p3,
author = {Geoffrey Hulette and Matthew Sottile and Allen Malony}, 
journal = {ESCIENCE '08: Proceedings of the 2008 Fourth IEEE International Conference on eScience},
title = {WOOL: A Workflow Programming Language},
abstract = {Workflows offer scientists a simple but flexible programming model at a level of abstraction closer to the domain-specific activities that they seek to perform. However, languages for describing workflows tend to be highly complex, or specialized towards a particular domain, or both. WOOL is an abstract workflow language with human-readable syntax, intuitive semantics, and a powerful abstract type system. WOOL workflows can be targeted to almost any kind of runtime system supporting data-flow computation. This paper describes the design of the WOOL language and the implementation of its compiler, along with a simple example runtime. We demonstrate its use in an image-processing workflow.},
year = {2008},
month = {Dec},
keywords = {workflow, dataflow, programming languages}, 
date-added = {2011-02-21 20:33:59 -0800},
date-modified = {2011-02-25 17:32:14 -0800},
URL = {http://portal.acm.org/citation.cfm?id=1488725.1488865&coll=DL&dl=GUIDE&CFID=9678789&CFTOKEN=62409665},
local-url = {file://localhost/Users/ghulette/Dropbox/Papers/2008/Hulette/Hulette2008.pdf},
uri = {papers://1D06A807-CDDB-4928-8DE4-8B3BCB6F08DC/Paper/p3},
read = {Yes},
rating = {0}
}

@article{Visser:1998p333,
author = {Eelco Visser and Zine-el-Abidine Benaissa}, 
journal = {Electronic Notes in Theoretical Computer Science},
title = {A Core Language for Rewriting},
abstract = {System S is a calculus providing the basic abstractions of term rewriting: matching and building terms, term traversal, combining computations and handling failure. The calculus forms a core language for implementation of a wide variety of rewriting languages, or more generally, languages for specifying tree transformations. In this paper we show how a conventional rewriting language based on conditional term rewriting can be implemented straightforwardly in System S. Subsequently we show how this implementation can be extended with features such as matching conditions, negative conditions, default rules, non-strictness annotations and alternative evaluation strategies.},
pages = {422--441},
volume = {15},
year = {1998},
month = {Jan},
date-added = {2011-02-25 15:45:34 -0800},
date-modified = {2011-03-06 21:09:17 -0800},
doi = {10.1016/S1571-0661(05)80027-1},
pii = {S1571066105800271},
pmid = {6684138700662947155related:U7108rvUwlwJ},
URL = {http://linkinghub.elsevier.com/retrieve/pii/S1571066105800271},
local-url = {file://localhost/Users/ghulette/Dropbox/Papers/1998/Visser/Visser1998.pdf},
uri = {papers://1D06A807-CDDB-4928-8DE4-8B3BCB6F08DC/Paper/p333},
read = {Yes},
rating = {0}
}

@article{hmpp,
author = {Dolbeau, R and Bihan, S},
title = {{HMPP: A hybrid multi-core parallel programming environment}},
journal = {First Workshop on General {\ldots}},
year = {2007}
}

@inproceedings{pgi-accelerate,
author = {Wolfe, Michael},
title = {{Implementing the PGI Accelerator model}},
booktitle = {GPGPU '10: Proceedings of the 3rd Workshop on General-Purpose Computation on Graphics Processing Units},
year = {2010},
publisher = { ACM  Request Permissions},
month = mar
}
