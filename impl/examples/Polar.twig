-- Cartesian to Polar

-- (x,y) to r (single)
c2prf = [(float,float) -> float] <<<
  $out = sqrtf($in1 * $in1 + $in2 * $in2);
>>>

-- (x,y) to theta (single)
c2ptf = [(float,float) -> float] <<<
  $out = atan2f($in2,$in1);
>>>

-- (x,y) to r (double)
c2prd = [(double,double) -> double] <<<
  $out = sqrt($in1 * $in1 + $in2 * $in2);
>>>

-- (x,y) to theta (double)
c2ptd = [(double,double) -> double] <<<
  $out = atan2($in2,$in1);
>>>

-- (x,y) -> (r,theta) (single or double)
c2p = &1(1,1);({c2prf,c2ptf}|{c2prd,c2ptd})


-- Polar to Cartesian

-- (r,theta) -> x (single)
p2cxf = [(float,float) -> float] <<<
  $out = $in1 * cosf($in2);
>>>

-- (r,theta) -> y (single)
p2cyf = [(float,float) -> float] <<<
  $out = $in1 * sinf($in2);
>>>

-- (r,theta) -> x (double)
p2cxd = [(double,double) -> double] <<<
  $out = $in1 * cos($in2);
>>>

-- (r,theta) -> y (double)
p2cyd = [(double,double) -> double] <<<
  $out = $in1 * sin($in2);
>>>

-- (r,theta) -> (x,y)
p2c = &1(1,1);({p2cxf,p2cyf}|{p2cxd,p2cyd})


-- Extract r and theta from two different structs, one single and one double

pptf = [polarf -> (float,float)] <<<
  $out1 = $in.r;
  $out2 = $in.theta;
>>>

pptd = [polard -> (double,double)] <<<
  $out1 = $in.dist;
  $out2 = $in.angle;
>>>


-- Put x and y into a Cartesian point struct with single-precision fields

pt = [(float,float) -> pt] <<<
  $out.x = $in1;
  $out.y = $in2;
>>>

d2f = [double -> float] <<<
  $out = (float)$in;
>>>

-- Convert a polar coordinate in either a float struct or a double struct to a 
-- pt (with float fields).
-- [polarf -> pt] | [polard -> pt]
convertPolarToCart = (pptf|pptd);p2c;({d2f,d2f}|id);pt
