-- We want to wrap this simple C function:
--
-- int foo(int x, int y) {
--   return x + y;
-- }
--
-- Goal is to generate this code:
--
-- PyObject *wrap_foo(PyObject *self, PyObject *args) {
--     int arg1;
--     int arg2;
--     int result;
--     PyObject *obj1;
--     PyObject *obj2;
--     PyObject *resultobj;
-- 
--     if (!PyArg_ParseTuple("O:factorial", &obj1, &obj2)) return NULL;
--     arg1 = PyInt_AsLong(obj1);
--     arg2 = PyInt_AsLong(obj2);
--     result = foo(arg1,arg2);
--     resultobj = PyInt_FromLong(result);
--     return resultobj;
-- }

r1 = [cint -> pyint] <<<
  $out = PyInt_FromLong((long)$in);
>>>

r2 = [pyint -> cint] <<<
  $out = (int)PyInt_AsLong($in);
>>>

ccall(f) = [(cfunc(int,(int,int)),(int,int)) -> int] <<<
  $out = $f($in2);
>>>

